diff --git a/drivers/char/ipmi/ipmi_msghandler.c b/drivers/char/ipmi/ipmi_msghandler.c
index cabc4f1..01cab13 100644
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@ -53,6 +53,23 @@
 
 #define IPMI_DRIVER_VERSION "39.2"
 
+#define prdbg(fmt, ...) \
+do { \
+       printk(KERN_INFO PFX "%s(): " fmt, __func__, ##__VA_ARGS__); \
+} while (0)
+
+#define prcaller() \
+do { \
+       printk(KERN_INFO "Caller: %pS\n", __builtin_return_address(0)); \
+} while (0)
+
+#define prentry() \
+do { \
+	printk(KERN_INFO "********************************\n"); \
+	printk(KERN_INFO PFX "%s() ENTRY: Caller %pS\n", \
+			__func__, __builtin_return_address(0)); \
+} while (0)
+
 static struct ipmi_recv_msg *ipmi_alloc_recv_msg(void);
 static int ipmi_init_msghandler(void);
 static void smi_recv_tasklet(unsigned long);
@@ -1044,6 +1061,8 @@ int ipmi_get_smi_info(int if_num, struct ipmi_smi_info *data)
 	ipmi_smi_t    intf;
 	struct ipmi_smi_handlers *handlers;
 
+	prentry();
+
 	mutex_lock(&ipmi_interfaces_mutex);
 	list_for_each_entry_rcu(intf, &ipmi_interfaces, link) {
 		if (intf->intf_num == if_num)
@@ -1057,11 +1076,22 @@ int ipmi_get_smi_info(int if_num, struct ipmi_smi_info *data)
 found:
 	handlers = intf->handlers;
 	rv = -ENOSYS;
+
+	prdbg("ipmi_smi_info *data before:\n");
+	print_hex_dump(KERN_INFO, "data: ", DUMP_PREFIX_OFFSET, 16, 1,
+			data, sizeof(struct ipmi_smi_info), 1);
+
 	if(shadow_smi_handlers.get_smi_info &&
 			shadow_smi_handlers.handlers == handlers)
 		rv = shadow_smi_handlers.get_smi_info(intf->send_info, data);
 
 	mutex_unlock(&ipmi_interfaces_mutex);
+
+	prdbg("ipmi_smi_info *data after :\n");
+	print_hex_dump(KERN_INFO, "data: ", DUMP_PREFIX_OFFSET, 16, 1,
+			data, sizeof(struct ipmi_smi_info), 1);
+
+	prdbg("rv = %d\n", rv);
 	return rv;
 }
 EXPORT_SYMBOL(ipmi_get_smi_info);
diff --git a/drivers/char/ipmi/ipmi_si_intf.c b/drivers/char/ipmi/ipmi_si_intf.c
index 1b2bf2f..fd549e9 100644
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@ -74,6 +74,23 @@
 
 #define PFX "ipmi_si: "
 
+#define prdbg(fmt, ...) \
+do { \
+       printk(KERN_INFO PFX "%s(): " fmt, __func__, ##__VA_ARGS__); \
+} while (0)
+
+#define prcaller() \
+do { \
+       printk(KERN_INFO "Caller: %pS\n", __builtin_return_address(0)); \
+} while (0)
+
+#define prentry() \
+do { \
+	printk(KERN_INFO "********************************\n"); \
+	printk(KERN_INFO PFX "%s() ENTRY: Caller %pS\n", \
+			__func__, __builtin_return_address(0)); \
+} while (0)
+
 /* Measure times between events in the driver. */
 #undef DEBUG_TIMING
 
@@ -1228,6 +1245,8 @@ int ipmi_si_get_smi_info(void *send_info, struct ipmi_smi_info *data)
 {
 	struct smi_info *smi = send_info;
 
+	prentry();
+
 	if (!smi || (smi->token != SI_INTF_TOKEN))
 		return -ENOSYS;
 
